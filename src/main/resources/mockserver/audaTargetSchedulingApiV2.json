{
  "openapi": "3.0.1",
  "info": {
    "title": "Scheduling API",
    "description": "A set of APIs to interact with the Audatex Scheduling Service v1.0.437",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "/Scheduling"
    }
  ],
  "paths": {
    "/api/v2/insurers/{insurerId}/repairers/{repairerId}/reservations": {
      "post": {
        "tags": [
          "Insurer.Repairer.Reservation"
        ],
        "summary": "Creates a new reservation",
        "description": "Creates a new reservation which is valid for a set period of time.",
        "operationId": "Insurer.Repairer.Reservation.Create",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The details of the reservation",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a created response with the Id and Url of the created reservation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelfViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the request fails validation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized, the repairer is not configured to work with the insurer or the estimator does not belong to the repairer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the estimator does not exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Returns an error if the reservation does not exists, the estimator does not have configurations for the insurer, the slot is invalid, the slot is not available, the repairer doesn't have a configuration type, the repairer doesn't have a valid configuration type or the external reservation system was unable to process the request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/insurers/{insurerId}/repairers/{repairerId}/appointments": {
      "post": {
        "tags": [
          "Insurer.Repairer.Appointment"
        ],
        "summary": "Creates a new appointment",
        "description": "Creates a new appointment for an existing reservation. The claimId links to an AudaTarget claim.",
        "operationId": "Insurer.Repairer.Appointment.Create",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The details of the appointment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a created response with the Id and Url of the created appointment",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelfViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the request fails validation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized or the reservation does not belong to the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "409": {
            "description": "Returns an error if there is already an appointment associated with the reservation, there is already an appointment associated with the time slot or there is already an appointment associated with the claim",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Returns an error if the reservation does not exists, the claim system was unable to process the request, the claim does not exist or the external appointment system was unable to process the request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Day/GetAll": {
      "get": {
        "tags": [
          "Day"
        ],
        "summary": "Returns a list of days",
        "description": "Returns a list of days from the database",
        "responses": {
          "200": {
            "description": "Returns the list of days or an empty response if no day was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DayResViewModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Sorry, an unexpected error has occurred"
          },
          "401": {
            "description": "Returns an error if the user is not authorized"
          }
        }
      }
    },
    "/api/v2/insurers/{insurerId}/repairers/{repairerId}/appointments/{appointmentId}": {
      "delete": {
        "tags": [
          "Insurer.Repairer.Appointment"
        ],
        "summary": "Deletes an appointment",
        "description": "Deletes an existing appointment",
        "operationId": "Insurer.Repairer.Appointment.Delete",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "The Id of the appointment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns a success response with no content"
          },
          "401": {
            "description": "Returns an error if the client is not authorized or the appointment does not belong to the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the appointment does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Returns an error if the system was unable to delete the appointment",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Insurer.Repairer.Appointment"
        ],
        "summary": "Returns an appointment details",
        "description": "Returns an appointment details",
        "operationId": "Insurer.Repairer.Appointment.Get",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "The Id of the appointment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the appointment details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized or the appointment does not belong to the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the appointment does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Insurer.Repairer.Appointment"
        ],
        "summary": "Updates an appointment",
        "description": "Updates an existing appointment",
        "operationId": "Insurer.Repairer.Appointment.Update",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "The Id of the appointment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The details of the appointment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentData"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentData"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentData"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a success response with no content"
          },
          "400": {
            "description": "Returns an error if the request fails validation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized, the appointment does not belong to the insurer or the reservation does not belong to the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the appointment does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "409": {
            "description": "Returns an error if there is already an appointment associated with the reservation or there is already an appointment associated with the time slot",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Returns an error if the reservation does not exists or the system was unable to update the appointment",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/insurers/{insurerId}/repairers/{repairerId}/reservations/{reservationId}": {
      "get": {
        "tags": [
          "Insurer.Repairer.Reservation"
        ],
        "summary": "Returns a reservation details",
        "description": "Returns a reservation details",
        "operationId": "Insurer.Repairer.Reservation.Get",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "The Id of the reservation",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the reservation details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VwReservationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VwReservationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VwReservationModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized or the reservation does not belong to the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Returns an error if the reservation does not exists",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/insurers/{insurerId}/repairers/{repairerId}/availability": {
      "get": {
        "tags": [
          "Insurer.Repairer.Availability"
        ],
        "summary": "Returns the repairer availability for a specific insurer",
        "description": "Get the repairer availability for a specific insurer and a given date range",
        "operationId": "Insurer.Repairer.Availability.Get",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The start date for the availability date range. The format must be in ISO-8601 format (yyyy-mm-dd) and must be equal or grater than today",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The end date for the availability date range. The format must be in ISO-8601 format (yyyy-mm-dd) and must be less or equal than 90 days from today",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "skill",
            "in": "query",
            "description": "The skill of the estimators",
            "schema": {
              "$ref": "#/components/schemas/Skill"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the availability details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RepairerAvailabilityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepairerAvailabilityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepairerAvailabilityModel"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the request fails validation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized or the repairer is not configured to work with the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "422": {
            "description": "Returns an error if the repairer doesn't have a configuration type, the repairer has no configurations for the insurer or the repairer doesn't have a valid configuration type",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/insurers/{insurerId}/repairers/{repairerId}/appointments/byClaimId/{claimId}": {
      "get": {
        "tags": [
          "Insurer.Repairer.Appointment"
        ],
        "summary": "Returns the appointment details for a valid claimId",
        "description": "Returns the details for the last existing appointment for a valid claimId",
        "operationId": "Insurer.Repairer.Appointment.GetByClaimId",
        "parameters": [
          {
            "name": "repairerId",
            "in": "path",
            "description": "The Id of the repairer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Id of the claim",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "insurerId",
            "in": "path",
            "description": "The Id of the insurer",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the appointment details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if the client is not authorized or the appointment does not belong to the insurer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the appointment does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skills": {
      "get": {
        "tags": [
          "Skill"
        ],
        "summary": "Returns a list of skills",
        "description": "Returns a list of skills from the database",
        "operationId": "Skill.List",
        "responses": {
          "200": {
            "description": "Returns the list of skills",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SkillResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the Id of the appointment",
            "format": "uuid"
          },
          "claimId": {
            "type": "string",
            "description": "This is the Id of the claim associated with the appointment",
            "format": "uuid"
          },
          "reservation": {
            "$ref": "#/components/schemas/ReservationModel"
          }
        },
        "additionalProperties": false
      },
      "CreateAppointmentData": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "description": "The Id of the reservation",
            "format": "uuid"
          },
          "claimId": {
            "type": "string",
            "description": "The Id of the claim",
            "format": "uuid"
          },
          "emailAddress": {
            "type": "string",
            "description": "The email address to which the appointment invite will be sent",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateReservationData": {
        "type": "object",
        "properties": {
          "slot": {
            "type": "string",
            "description": "The slot used for the reservation",
            "nullable": true
          },
          "estimatorId": {
            "type": "string",
            "description": "The Id of the estimator",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DateAvailabilityModel": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "This is the date that the timeSlots are available on. It will be shown in ISO-8601 format (yyyy-mm-dd)",
            "nullable": true
          },
          "estimators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstimatorAvailabilityModel"
            },
            "description": "This will show the estimators availability",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DayResViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The Id of the day",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the day",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EstimatorAvailabilityModel": {
        "type": "object",
        "properties": {
          "estimatorId": {
            "type": "string",
            "description": "This is the Id of the estimator",
            "format": "uuid"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "These are the skills associated with the estimator",
            "nullable": true
          },
          "timeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlotAvailabilityModel"
            },
            "description": "This property shows the time slots associated with the estimator",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepairerAvailabilityModel": {
        "type": "object",
        "properties": {
          "availabilityPercentage": {
            "type": "string",
            "description": "This value is calculated using the formula 1 - (numberOfSlotsTaken / totalNumberOfSlots).\r\nIt is calculated based on the date range entered.",
            "nullable": true
          },
          "availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateAvailabilityModel"
            },
            "description": "Details of availability",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the reservation",
            "format": "uuid"
          },
          "insurerId": {
            "type": "string",
            "description": "The Id of the insurer that the reservation was made against",
            "format": "uuid"
          },
          "timeSlot": {
            "$ref": "#/components/schemas/TimeSlotModel"
          }
        },
        "additionalProperties": false
      },
      "SelfViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the Id returned when making a POST request",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "This Url will allow you to find out more information about the item you created",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Skill": {
        "enum": [
          "Driveable",
          "NonDriveable"
        ],
        "type": "string"
      },
      "SkillResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The Id of the skill",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the skill",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSlotAvailabilityModel": {
        "type": "object",
        "properties": {
          "slot": {
            "type": "string",
            "description": "Unique identifier of the time slot that you need to make a reservation",
            "nullable": true
          },
          "slotNumber": {
            "type": "string",
            "description": "This property will be visible if the repairer has been configured for day slots\r\nand will show the slot number that is available",
            "nullable": true
          },
          "fromTime": {
            "type": "string",
            "description": "This shows the start time for the slot, e.g. \"09:00\"",
            "nullable": true
          },
          "toTime": {
            "type": "string",
            "description": "This shows the finish time for the slot, e.g. \"09:30\"",
            "nullable": true
          },
          "isAvailable": {
            "type": "boolean",
            "description": "This flag shows whether the slot is available or not"
          }
        },
        "additionalProperties": false
      },
      "TimeSlotModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the time slot",
            "nullable": true
          },
          "repairerId": {
            "type": "string",
            "description": "The Id of the repairer that the slot belongs to",
            "nullable": true
          },
          "estimatorId": {
            "type": "string",
            "description": "The Id of the estimator that the slot belongs to",
            "nullable": true
          },
          "slot": {
            "type": "string",
            "description": "The slot that was used to create the reservation",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "The date the reservation was made for. It will be displayed in IS0-8601 format (yyyy-mm-dd)",
            "nullable": true
          },
          "slotNumber": {
            "type": "string",
            "description": "This will only be displayed if a day booking was made, e.g. \"10\" slots",
            "nullable": true
          },
          "fromTime": {
            "type": "string",
            "description": "This will only be displayed if a time interval booking was made, e.g. \"09:00\"",
            "nullable": true
          },
          "toTime": {
            "type": "string",
            "description": "This will only be displayed if a time interval booking was made, e.g. \"09:30\"",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAppointmentData": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "description": "The Id of the reservation",
            "format": "uuid"
          },
          "emailAddress": {
            "type": "string",
            "description": "The email address to which the appointment invite will be sent",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationResultModel": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Information about the errors displayed by property",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "VwReservationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the reservation",
            "format": "uuid"
          },
          "timeSlotId": {
            "type": "string",
            "description": "The Id of the time slot",
            "format": "uuid"
          },
          "insurerId": {
            "type": "string",
            "description": "The Id of the insurer that the reservation was made against",
            "format": "uuid"
          },
          "timeSlot": {
            "$ref": "#/components/schemas/TimeSlotModel"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}